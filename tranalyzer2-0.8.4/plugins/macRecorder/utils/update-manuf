#!/usr/bin/env bash
#
# Generates 'manuf.txt' file from Wireshark's manuf file,
# the latest version of which can be found at:
# https://code.wireshark.org/review/gitweb?p=wireshark.git;a=blob_plain;f=manuf;hb=HEAD

source "$(dirname "$0")/../../../scripts/t2utils.sh"

usage() {
    printf "Usage:\n"
    printf "    $SNAME [OPTION...]\n\n"
    printf "Optional arguments:\n"
    printf "    -u      update manuf\n"
    printf "    -c      convert manuf to manuf.txt\n"
    printf "    -a      update and convert manuf\n"
    printf "    -h      display this help, then exit\n"
}

manuf_convert() {
    $AWK -F"\t" '
        NF > 1 && $1 ~ /^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){2}$/{
            split($1, m, ":")
            sname = $2
            if (NF == 2) {
                lname = sname
            } else if (NF == 3) {
                lname = $3
            } else {
                lname = $3
                for (i = 4; i <= NF && $i !~ /^#/; i++) {
                    lname = lname " " $i
                }
            }
            printf "0x%s%s%s\t%s\t%s\n", m[1], m[2], m[3], sname, lname
        }
        #$1 ~ /^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){5}\/[0-9]{2}$/ {
        #    # TODO
        #}
    ' "$INFILE" > "$OUTFILE"
}

manuf_update() {
    wget 'https://code.wireshark.org/review/gitweb?p=wireshark.git;a=blob_plain;f=manuf;hb=HEAD' -O "$INFILE"
}

if [ $# -eq 0 ]; then
    printerr "One of '-a', '-u' or '-c' option is required"
    abort_with_help
fi

INFILE="manuf"
OUTFILE="../${INFILE}.txt"

while [ $# -gt 0 ]; do
    case "$1" in
        -a|--all)
            UPDATE=1
            CONVERT=1
            ;;
        -u|--update)
            UPDATE=1
            ;;
        -c|--convert)
            CONVERT=1
            ;;
        -h|-\?|--help)
            usage
            exit 0
            ;;
        *)
            abort_option_unknown "$1"
            ;;
    esac
    shift
done

RET=0

if [ "$UPDATE" ]; then
    manuf_update
    RET=$?
fi

if [ "$CONVERT" ]; then
    manuf_convert
    RET=$?
    if [ $RET -eq 0 ]; then
        printok "'$INFILE' successfully converted to '$OUTFILE'"
    else
        printerr "Failed to convert '$INFILE' to '$OUTFILE'"
    fi
fi

exit $RET
