#ifndef _WAVELET_TYPES_H
#define _WAVELET_TYPES_H

#include "define_global.h"

/*
 * Daubechies wavelet: 'db1' or 'haar', 'db2', 'db3', 'db4'
 * Filter's values obtained with the function wfilters('wname') in matlab
 */

// The order between the wavelet in the enum and WAVELETS[] *MUST* be the same

// Struct of a wavelet
typedef struct {
    int name;
    int length;     // Length of the filter wavelet
    WPREC *LO_D;    // Low pass Decomposition Filter
    WPREC *HI_D;    // High pass Decomposition Filter
    WPREC *LO_R;    // Low pass Reconstruction Filter
    WPREC *HI_R;    // High pass Reconstruction Filter
} wavelet_descr;


// definition of the wavelet types
// LO=LOW PASS; HI=HIGH PASS; D=DECONSTRUCTION; R=RECONSTRUCTION

#define DB1_L 2
const WPREC DB1_LO_D[DB1_L] = { 0.707106781186548, 0.707106781186548 };
const WPREC DB1_HI_D[DB1_L] = { -0.707106781186548, 0.707106781186548 };

const WPREC DB1_LO_R[DB1_L] = { 0.707106781186548, 0.707106781186548 };
const WPREC DB1_HI_R[DB1_L] = { 0.707106781186548, -0.707106781186548 };

#define DB2_L 4
const WPREC DB2_LO_D[DB2_L] = { -0.129409522550921, 0.224143868041857, 0.836516303737469, 0.482962913144690 };
const WPREC DB2_HI_D[DB2_L] = { -0.482962913144690, 0.836516303737469, -0.224143868041857, -0.129409522550921 };

const WPREC DB2_LO_R[DB2_L] = { 0.482962913144690, 0.836516303737469, 0.224143868041857, -0.129409522550921 };
const WPREC DB2_HI_R[DB2_L] = { -0.129409522550921, -0.224143868041857, 0.836516303737469, -0.482962913144690 };

#define DB3_L 6
const WPREC DB3_LO_D[DB3_L] = { 0.035226291882101, -0.085441273882241, -0.135011020010391, 0.459877502119331, 0.806891509313339, 0.332670552950957 };
const WPREC DB3_HI_D[DB3_L] = { -0.332670552950957, 0.806891509313339, -0.459877502119331, -0.135011020010391, 0.085441273882241, 0.035226291882101 };

const WPREC DB3_LO_R[DB3_L] = { 0.332670552950957, 0.806891509313339, 0.459877502119331, -0.135011020010391, -0.085441273882241, 0.035226291882101 };
const WPREC DB3_HI_R[DB3_L] = { 0.035226291882101, 0.085441273882241, -0.135011020010391, -0.459877502119331, 0.806891509313339, -0.332670552950957 };

#define DB4_L 8
const WPREC DB4_LO_D[DB4_L] = { -0.010597401784997, 0.032883011666983, 0.030841381835987, -0.187034811718881, -0.027983769416984, 0.630880767929590, 0.714846570552542, 0.230377813308855 };
const WPREC DB4_HI_D[DB4_L] = { -0.230377813308855, 0.714846570552542, -0.630880767929590, -0.027983769416984, 0.187034811718881, 0.030841381835987, -0.032883011666983, -0.010597401784997 };

const WPREC DB4_LO_R[DB4_L] = { 0.230377813308855, 0.714846570552542, 0.630880767929590, -0.027983769416984, -0.187034811718881, 0.030841381835987, 0.032883011666983, -0.010597401784997 };
const WPREC DB4_HI_R[DB4_L] = { -0.010597401784997, -0.032883011666983, 0.030841381835987, 0.187034811718881, -0.027983769416984, -0.630880767929590, 0.714846570552542, -0.230377813308855 };


// WAVELETS[] is the array with all the predifined wavelets: look at the enum in the .h file for the correct order

wavelet_descr WAVELETS[] = {
    { DB1, DB1_L, (WPREC*) DB1_LO_D, (WPREC*) DB1_HI_D, (WPREC*) DB1_LO_R, (WPREC*) DB1_HI_R },
    { DB2, DB2_L, (WPREC*) DB2_LO_D, (WPREC*) DB2_HI_D, (WPREC*) DB2_LO_R, (WPREC*) DB2_HI_R },
    { DB3, DB3_L, (WPREC*) DB3_LO_D, (WPREC*) DB3_HI_D, (WPREC*) DB3_LO_R, (WPREC*) DB3_HI_R },
    { DB4, DB4_L, (WPREC*) DB4_LO_D, (WPREC*) DB4_HI_D, (WPREC*) DB4_LO_R, (WPREC*) DB4_HI_R },
};

#endif // _WAVELET_TYPES_H
